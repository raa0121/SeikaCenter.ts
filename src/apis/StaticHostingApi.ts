// tslint:disable
/**
 * SeikaCenter HTTP API
 * SeikaCenter HTTP API
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Message,
    MessageFromJSON,
    MessageToJSON,
} from '../models';

export interface GetAppByPathRequest {
    path: string;
}

/**
 * no description
 */
export class StaticHostingApi extends runtime.BaseAPI {

    /**
     * Returns static content in the app folder directly under the work folder
     */
    async getAppByPathRaw(requestParameters: GetAppByPathRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.path === null || requestParameters.path === undefined) {
            throw new runtime.RequiredError('path','Required parameter requestParameters.path was null or undefined when calling getAppByPath.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/app/{path}`.replace(`{${"path"}}`, encodeURIComponent(String(requestParameters.path))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Returns static content in the app folder directly under the work folder
     */
    async getAppByPath(requestParameters: GetAppByPathRequest): Promise<void> {
        await this.getAppByPathRaw(requestParameters);
    }

}
